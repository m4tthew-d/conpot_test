# Matthew Davis
# Task: Create script that reads from stdin and writes to a file
import sys
import os
import unittest
import filecmp
import tty
import termios

fn=sys.stdin.fileno()
old_settings = termios.tcgetattr(fn)

def recorder(fd, trm):
    with open('stdin_log.txt', 'w') as log:
        while 1:
            try:
                if trm:
		    tty.setraw(fd)
                    line = os.read(fd, 1)   # Reads 1 byte at a time
                else:
                    line = os.read(fd, 1024*4)  # Reads up to 4KB at a time for file reading
                if not line:  # Stops reading if line is empty
                    break
            except Exception as e: # Stops reading when Ctrl-C is pressed
                print e # Printing to show entering 'except' section
            finally:
                if trm:
		    termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
		    check = ord(line)
		    if check in [3, 4]:
		    	break
		    print(line)
		log.write(line)  # writes line to the file
		log.flush()

def main():
    trm = 1
    recorder(fn, trm)


class Test(unittest.TestCase):

    def test_written_file(self):    # Uses english text test file
        test_file = os.open('moby.txt', os.O_RDONLY)
        trm = 0
        recorder(test_file, trm)
        same = filecmp.cmp('moby.txt','stdin_log.txt', False)
        self.assertTrue(same)

    def test_empty_file(self):      # Uses empty .txt test file
        test_file = os.open('empty.txt', os.O_RDONLY)
        trm = 0
        recorder(test_file, trm)
        same = filecmp.cmp('empty.txt','stdin_log.txt', False)
        self.assertTrue(same)

    def test_numeric_file(self):    # Uses 1 GB .txt file with only 0's
        test_file = os.open('zeros.txt', os.O_RDONLY)
        trm = 0
        recorder(test_file, trm)
        same = filecmp.cmp('zeros.txt','stdin_log.txt', False)
        self.assertTrue(same)

    def test_binary_file(self):     # Uses .txt file generated by "dd if=/dev/urandom bs=1024k count=1 > binary.txt"
        test_file = os.open('binary.txt', os.O_RDONLY)
        trm = 0
        recorder(test_file, trm)
        same = filecmp.cmp('binary.txt','stdin_log.txt', False)
        self.assertTrue(same)

#if __name__ == '__main__':          # Runs Test
#    unittest.main()

main()
